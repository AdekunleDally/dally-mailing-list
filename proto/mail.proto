syntax = "proto3";

package proto;

option go_package = "mailinglist/proto";

//(Protocol buffer below) which defines the structure of a data and serializes the data too  
//1.  Define your messages
message EmailEntry {
    int64 id =1;
    string email=2;  
    int64 confirmed_at = 3;
    bool opt_out = 4 ;
}  

message CreateEmailRequest{ string email_addr=1;}
message GetEmailRequest{string email_addr =1;}
message UpdateEmailRequest {EmailEntry email_entry =1;}
message DeleteEmailRequest {string email_addr =1;}
message GetEmailBatchRequest {int32 page=1; int32 count=2;}

message EmailResponse {
    optional EmailEntry email_entry= 1;
}

message GetEmailBatchResponse{
   repeated  EmailEntry email_entries=1;
}

//Define your Service Definition
service MailingListService {
    rpc CreateEmail(CreateEmailRequest) returns (EmailResponse) {}
    rpc GetEmail(GetEmailRequest) returns (EmailResponse) {}
    rpc UpdateEmail(UpdateEmailRequest) returns (EmailResponse) {}
    rpc DeleteEmail(DeleteEmailRequest) returns (EmailResponse) {}
    rpc GetEmailBatch(GetEmailBatchRequest) returns (GetEmailBatchResponse) {}
}
































































































































// syntax = "proto3";
// package proto;

// option go_package = "mailinglist/proto";

// message EmailEntry{
//     int64 id = 1;
//     string email = 2;
//     int64 confirmed_at = 3;
//     bool opt_out = 4;
// }
// // Each one of the messages below represent an API endpoint
//Defines the request format for creating email, retrieving email updating email etc
// message CreateEmailRequest {string email_addr = 1;}
// message GetEmailRequest {string email_addr = 1;}
// message UpdateEmailRequest {EmailEntry email_entry = 1;}
// message DeleteEmailRequest {string email_addr = 1;}
// message GetEmailBatchRequest {int32 page=1; int32 count=2;}


// message EmailResponse {optional EmailEntry email_entry = 1;}
// message GetEmailBatchResponse  {repeated EmailEntry email_entries = 1;}

// //Create Service definition which is used to generate the golang code to run the server

// service MailingListService {
//     rpc CreateEmail(CreateEmailRequest) returns (EmailResponse) {}
//     rpc GetEmail(GetEmailRequest) returns (EmailResponse) {}
//     rpc UpdateEmail(UpdateEmailRequest) returns (EmailResponse) {}
//     rpc DeleteEmail(DeleteEmailRequest) returns (EmailResponse) {}
//     rpc GetEmailBatch(GetEmailBatchRequest) returns (GetEmailBatchResponse) {}
// }